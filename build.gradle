plugins {
	id 'org.springframework.boot' version '2.5.12'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.stock.service'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

// https://mvnrepository.com/artifact/io.springfox/springfox-boot-starter
	implementation 'io.springfox:springfox-boot-starter:3.0.0'

	// https://mvnrepository.com/artifact/mysql/mysql-connector-java
//	implementation 'mysql:mysql-connector-java:8.0.21'

	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
	implementation 'org.springframework.boot:spring-boot-starter-validation:2.6.6'

	// https://mvnrepository.com/artifact/org.mapstruct/mapstruct
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'

	// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-netflix-eureka-client
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:3.0.5'

// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-mongodb
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb:2.6.7'

	annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"


}

//bootJar{
//	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
//}
//jar{
//	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
//	from {
//		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
//	}
//	manifest {
//		attributes["Main-Class"] = "com.stock.service.eStockService.EStockServiceApplication"
//	}
//	destinationDirectory = file("$rootDir/my-jar")
//	archivesBaseName = 'app'
//}

bootJar {
	baseName = "eStockService"
	version =  '1.0.0'
}

tasks.named('test') {
	useJUnitPlatform()
}
